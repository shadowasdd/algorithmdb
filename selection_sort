//Item Interface
    public interface Item{  
        boolean less(Item v);  
    }  
---------------------------------------------------------
//Create class for single Item
    public class MyItem implements Item{  
        private int key;  
        public boolean less(Item v){  
            return key < ((MyItem)v).key;  
        }  
        public void read(){  
            key = new Random().nextInt();  
        }  
        public void rand(){  
            key = (int)(1000 * Math.random());  
        }  
        public String toString(){  
            return key + "";  
        }  
    }  
---------------------------------------------------------
//Main Doc.
    public class Selection {  
      
        public static void main(String[] args) {  
            int n = 60;  
            MyItem [] a = new MyItem[n];  
            for (int i = 0; i < n; i++) {  
                a[i] = new MyItem();  
                a[i].rand();  
            }  
              
            for (int i = 0; i < n; i++) {  
                System.out.print(a[i] + " ");  
            }  
              
            selection(a, 0, n);  
            System.out.println("");  
            print(a, n);  
        }  
          
        private static void print(MyItem a [], int n){  
            for (int i = 0; i < n; i++) {  
                System.out.print(a[i] + " ");  
            }  
        }  
          
        public static void selection(MyItem [] a, int l, int r){  
            for (int i = l; i < r; i++) {  
                int min = i;  
                for (int j = i + 1; j < r; j++) {  
                    if(less(a[j], a[min])){  
                        min = j;  
                    }  
                }  
                exch(a, i, min);  
            }  
        }  
          
        public static boolean less(Item v, Item w){  
            return v.less(w);  
        }  
          
        public static void exch(Item [] a, int i, int j){  
            Item t = a[i];  
            a[i] = a[j];  
            a[j] = t;  
        }  
          
        public static void compExch(Item [] a, int i, int j){  
            if(less(a[j],a[i])){  
                exch(a, i, j);  
            }  
        }  
    }  
